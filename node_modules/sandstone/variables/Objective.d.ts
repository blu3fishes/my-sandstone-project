import { JSONTextComponentClass } from './JSONTextComponentClass';
import { Score } from './Score';
import type { JSONTextComponent, MultipleEntitiesArgument } from 'src/arguments';
import type { CommandsRoot } from "../commands";
export declare class ObjectiveClass<CRITERION extends string | undefined = string | undefined> {
    private commandsRoot;
    name: string;
    criterion: CRITERION;
    display: JSONTextComponentClass | undefined;
    _displayRaw: JSONTextComponent | undefined;
    constructor(commandsRoot: CommandsRoot, name: string, criterion?: CRITERION, display?: JSONTextComponent);
    toString(): string;
    ScoreHolder: (scoreHolder: MultipleEntitiesArgument) => Score<CRITERION>;
}
export declare type ObjectiveInstance<CRITERION extends string | undefined = string | undefined> = (Omit<ObjectiveClass<CRITERION>, 'ScoreHolder'> & ObjectiveClass<CRITERION>['ScoreHolder']);
